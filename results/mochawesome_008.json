{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-26T14:18:10.391Z",
    "end": "2023-12-26T14:18:10.808Z",
    "duration": 417,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c470fa98-f591-4959-bc59-d775de075c92",
      "title": "",
      "fullFile": "cypress\\e2e\\API_TESTING\\stores\\deleteOrder.cy.js",
      "file": "cypress\\e2e\\API_TESTING\\stores\\deleteOrder.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "63bf14ce-5029-41c5-9b8d-94ea21e3255a",
          "title": "Delete purchase order by ID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
              "fullTitle": "Delete purchase order by ID For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('200_application_json__deleteOrder').then(fixtureResponse => {\n  requestInfo.body = fixtureResponse.payload ? fixtureResponse.payload : '';\n  requestInfo.headers = fixtureResponse.headers ? fixtureResponse.headers : '';\n  let pathParams = fixtureResponse.pathParam ? fixtureResponse.pathParam : '';\n  for (const key in pathParams) {\n    if (pathParams.hasOwnProperty(key)) {\n      const placeholder = '{' + key + '}';\n      requestInfo.url = requestInfo.url.replace(new RegExp(placeholder, 'g'), pathParams[key]);\n    }\n  }\n  cy.request(requestInfo).then(response => {\n    expect(response.status).to.eq(parseInt(fixtureResponse.responseStatusCode));\n    if (fixtureResponse.responseSchema && fixtureResponse.responseSchema != '') {\n      const validate = ajv.compile(fixtureResponse.responseSchema);\n      const isValid = validate(response.body);\n      expect(isValid).to.be.true;\n    }\n  });\n});",
              "err": {},
              "uuid": "0767772e-17f8-4a38-9a0a-9f45b763aef2",
              "parentUUID": "63bf14ce-5029-41c5-9b8d-94ea21e3255a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0767772e-17f8-4a38-9a0a-9f45b763aef2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 357,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}